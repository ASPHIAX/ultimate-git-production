name: 'Security Compliance Scan'

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: NPM Security Audit
      run: |
        npm audit --audit-level=moderate
        npm audit --json > npm-audit-results.json || true
        
    - name: Trivy Container Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ultimate-mcp-server:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy Results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Secrets Detection Scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'master-container-mcp'
        path: '.'
        format: 'ALL'
        
    - name: Upload OWASP Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: owasp-dependency-check-results
        path: reports/
        
    - name: Security Summary Report
      if: always()
      run: |
        echo '## Security Scan Summary' >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        
        if [ -f npm-audit-results.json ]; then
          HIGH_VULNS=$(jq '.metadata.vulnerabilities.high // 0' npm-audit-results.json)
          CRITICAL_VULNS=$(jq '.metadata.vulnerabilities.critical // 0' npm-audit-results.json)
          echo '**NPM Audit Results:**' >> $GITHUB_STEP_SUMMARY
          echo '- Critical: '$CRITICAL_VULNS >> $GITHUB_STEP_SUMMARY
          echo '- High: '$HIGH_VULNS >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
        fi
        
        echo '**Container Security:** Trivy scan completed' >> $GITHUB_STEP_SUMMARY
        echo '**Secrets Detection:** TruffleHog scan completed' >> $GITHUB_STEP_SUMMARY
        echo '**Dependencies:** OWASP dependency check completed' >> $GITHUB_STEP_SUMMARY
        
    - name: Fail on Critical Vulnerabilities
      run: |
        if [ -f npm-audit-results.json ]; then
          CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' npm-audit-results.json)
          if [ $CRITICAL -gt 0 ]; then
            echo 'CRITICAL VULNERABILITIES FOUND: '$CRITICAL
            echo 'Failing build due to critical security issues'
            exit 1
          fi
        fi
